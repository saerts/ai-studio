---
import MainNav from './MainNav.astro';
import Button from '../ui/Button.astro';
---

<header class="sticky top-0 z-50 border-b border-gray-200 bg-white/80 backdrop-blur-sm dark:border-gray-700 dark:bg-gray-900/80">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <svg
            class="h-8 w-8"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
          >
            <defs>
              <linearGradient id="gradient-header" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" style="stop-color:#0ea5e9" />
                <stop offset="100%" style="stop-color:#0369a1" />
              </linearGradient>
            </defs>
            <circle cx="12" cy="12" r="10" fill="url(#gradient-header)" />
            <path fill="white" d="M8 12h8M12 8v8" />
          </svg>
          <span class="text-xl font-bold text-gray-900 dark:text-white">
            AI Studio
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <MainNav />
      </div>

      <!-- Desktop CTA + Mobile Menu Button -->
      <div class="flex items-center space-x-4">
        <div class="hidden sm:block">
          <Button href="/contact" variant="primary" size="sm">
            Start gesprek
          </Button>
        </div>

        <!-- Mobile menu button -->
        <button
          type="button"
          class="mobile-menu-button md:hidden rounded-md p-2 text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary-500 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
          aria-expanded="false"
          aria-controls="mobile-menu"
          aria-label="Toggle navigation menu"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Menu icon (hamburger) -->
          <svg class="menu-icon h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
          <!-- Close icon (X) -->
          <svg class="close-icon hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="mobile-menu hidden md:hidden" id="mobile-menu">
      <div class="space-y-1 px-2 pb-3 pt-2">
        <a
          href="/"
          class="block rounded-md px-3 py-2 text-base font-medium text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
          data-current-class="bg-primary-100 text-primary-900 dark:bg-primary-900 dark:text-primary-100"
        >
          Home
        </a>
        <a
          href="/diensten"
          class="block rounded-md px-3 py-2 text-base font-medium text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
          data-current-class="bg-primary-100 text-primary-900 dark:bg-primary-900 dark:text-primary-100"
        >
          Onze diensten
        </a>
        <a
          href="/blog"
          class="block rounded-md px-3 py-2 text-base font-medium text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
          data-current-class="bg-primary-100 text-primary-900 dark:bg-primary-900 dark:text-primary-100"
        >
          Blog
        </a>
        <a
          href="/contact"
          class="block rounded-md px-3 py-2 text-base font-medium text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white"
          data-current-class="bg-primary-100 text-primary-900 dark:bg-primary-900 dark:text-primary-100"
        >
          Contact
        </a>

        <!-- Mobile CTA -->
        <div class="pt-4 sm:hidden">
          <a
            href="/contact"
            class="block w-full rounded-md bg-primary-600 px-3 py-2 text-center text-base font-medium text-white hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
          >
            Start gesprek
          </a>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const menuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const menuIcon = document.querySelector('.menu-icon');
    const closeIcon = document.querySelector('.close-icon');

    if (!menuButton || !mobileMenu || !menuIcon || !closeIcon) return;

    // Set current page state for mobile menu items
    const currentPath = window.location.pathname;
    const mobileLinks = mobileMenu.querySelectorAll('a[data-current-class]');

    mobileLinks.forEach(link => {
      const href = link.getAttribute('href');
      const currentClass = link.getAttribute('data-current-class');

      if (href === currentPath || (currentPath === '/' && href === '/')) {
        link.className = link.className.replace(/text-gray-700.*?(?=\s|$)/g, '').trim();
        link.className += ` ${currentClass}`;
        link.setAttribute('aria-current', 'page');
      }
    });

    // Toggle mobile menu
    function toggleMobileMenu() {
      const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';

      menuButton.setAttribute('aria-expanded', (!isExpanded).toString());

      if (isExpanded) {
        mobileMenu.classList.add('hidden');
        menuIcon.classList.remove('hidden');
        closeIcon.classList.add('hidden');
      } else {
        mobileMenu.classList.remove('hidden');
        menuIcon.classList.add('hidden');
        closeIcon.classList.remove('hidden');
      }
    }

    // Event listeners
    menuButton.addEventListener('click', toggleMobileMenu);

    // Close menu when clicking on a link
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        if (!mobileMenu.classList.contains('hidden')) {
          toggleMobileMenu();
        }
      });
    });

    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      const isClickInsideNav = menuButton.contains(event.target) || mobileMenu.contains(event.target);

      if (!isClickInsideNav && !mobileMenu.classList.contains('hidden')) {
        toggleMobileMenu();
      }
    });

    // Close menu on escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        toggleMobileMenu();
        menuButton.focus(); // Return focus to menu button
      }
    });

    // Handle focus trapping in mobile menu
    mobileMenu.addEventListener('keydown', (event) => {
      if (event.key === 'Tab') {
        const focusableElements = mobileMenu.querySelectorAll('a, button');
        const firstElement = focusableElements[0];
        const lastElement = focusableElements[focusableElements.length - 1];

        if (event.shiftKey) {
          if (document.activeElement === firstElement) {
            event.preventDefault();
            lastElement.focus();
          }
        } else {
          if (document.activeElement === lastElement) {
            event.preventDefault();
            firstElement.focus();
          }
        }
      }
    });
  });
</script>