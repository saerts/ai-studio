---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import { articleSchema, breadcrumbsSchema } from '../../lib/schema';
import Button from '../ui/Button.astro';

export interface Props {
  post: CollectionEntry<'blog'> | {
    id: string;
    slug: string;
    data: {
      title: string;
      description: string;
      pubDate: Date;
      updatedDate: Date;
      tags: string[];
      source?: string;
      canonicalUrl?: string;
      cover?: string;
      coverAlt?: string;
      coverGenerated?: boolean;
      draft: boolean;
    };
    body?: string;
  };
  isMCPPost?: boolean;
}

const { post, isMCPPost = false } = Astro.props;
const { title, description, pubDate, updatedDate, tags, source, canonicalUrl } = post.data;

const seoProps = {
  title,
  description,
  canonical: `https://ai-studio.be/blog/${post.slug}`,
  type: 'article' as const,
};

const schema = articleSchema(
  title,
  description,
  seoProps.canonical,
  pubDate.toISOString(),
  updatedDate?.toISOString(),
);

const breadcrumbs = breadcrumbsSchema([
  { name: 'Home', url: '/' },
  { name: 'Blog', url: '/blog' },
  { name: title, url: `/blog/${post.slug}` },
]);

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('nl-BE', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
};
---

<BaseLayout {...seoProps}>
  <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbs)} />

  <article class="mx-auto max-w-3xl px-4 py-12 sm:px-6 lg:px-8">
    <!-- Breadcrumbs -->
    <nav aria-label="Breadcrumb" class="mb-8">
      <ol class="flex items-center space-x-2 text-sm text-zinc-400">
        <li>
          <a href="/" class="hover:text-teal-400 transition-colors">Home</a>
        </li>
        <li>
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"/>
          </svg>
        </li>
        <li>
          <a href="/blog" class="hover:text-teal-400 transition-colors">Blog</a>
        </li>
        <li>
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"/>
          </svg>
        </li>
        <li aria-current="page" class="text-zinc-300">
          {title}
        </li>
      </ol>
    </nav>

    <header class="mb-8">
      <h1 class="mb-4 text-3xl font-bold tracking-tight text-white sm:text-4xl gradient-text">
        {title}
      </h1>

      <div class="flex flex-wrap items-center gap-4 text-sm text-zinc-400">
        <div class="flex items-center gap-2">
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
          </svg>
          <time datetime={pubDate.toISOString()}>
            {formatDate(pubDate)}
          </time>
        </div>
        {updatedDate && (
          <div class="flex items-center gap-2">
            <span aria-hidden="true">·</span>
            <span>
              Bijgewerkt op <time datetime={updatedDate.toISOString()}>
                {formatDate(updatedDate)}
              </time>
            </span>
          </div>
        )}
        {source && (
          <div class="flex items-center gap-2">
            <span aria-hidden="true">·</span>
            <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"/>
            </svg>
            <span>{source}</span>
          </div>
        )}
      </div>

      {tags.length > 0 && (
        <div class="mt-4 flex flex-wrap gap-2">
          {tags.map((tag) => (
            <span class="inline-flex items-center rounded-full bg-teal-400/20 px-3 py-1 text-xs font-medium text-teal-400">
              {tag}
            </span>
          ))}
        </div>
      )}

      {isMCPPost && (
        <div class="mt-4 flex justify-start">
          <div class="glass-card px-3 py-1 text-xs text-teal-400 flex items-center gap-2">
            <svg class="h-3 w-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            Live content van MCP API
          </div>
        </div>
      )}
    </header>

    <div class="prose prose-lg max-w-none dark:prose-invert">
      <slot />
    </div>

    <footer class="mt-12 border-t border-zinc-700 pt-8">
      <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
        {canonicalUrl && (
          <Button href={canonicalUrl} variant="secondary" size="sm" target="_blank">
            Lees origineel artikel
          </Button>
        )}

        <Button href="/blog" variant="primary" size="sm">
          Terug naar blog
        </Button>
      </div>
    </footer>
  </article>
</BaseLayout>